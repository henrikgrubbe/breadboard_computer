(()=>{"use strict";var r={6818:(r,n,e)=>{e(8665),e(9193),e(9218),e(3396);var t=e(2518),a=e(6768),i={class:"container"},o=(0,a.Lk)("div",{class:"row my-5"},[(0,a.Lk)("h1",{class:"display-4"},"Breadboard PC")],-1);function l(r,n,e,t,l,s){var d=(0,a.g2)("ProgramCompiler"),u=(0,a.g2)("SingleAddress");return(0,a.uX)(),(0,a.CE)("div",i,[o,(0,a.bF)(d),(0,a.bF)(u)])}var s={class:"row"},d={class:"col-lg-10 col-xl-8 mb-3"},u=(0,a.Lk)("label",{for:"program-txt",class:"form-label"},"Write a single RAM address",-1),c={class:"input-group mb-3"},m=(0,a.Lk)("span",{class:"input-group-text"},"@",-1),p={class:"col-12"},f=["disabled"];function g(r,n,e,i,o,l){return(0,a.uX)(),(0,a.CE)("div",s,[(0,a.Lk)("div",d,[u,(0,a.Lk)("div",c,[(0,a.bo)((0,a.Lk)("input",{"onUpdate:modelValue":n[0]||(n[0]=function(n){return r.data=n}),type:"number",min:"0",max:"255",class:"form-control",placeholder:"Value","aria-label":"Value"},null,512),[[t.Jo,r.data]]),m,(0,a.bo)((0,a.Lk)("input",{"onUpdate:modelValue":n[1]||(n[1]=function(n){return r.address=n}),type:"number",min:"0",max:"15",class:"form-control",placeholder:"Address","aria-label":"Address"},null,512),[[t.Jo,r.address]])])]),(0,a.Lk)("div",p,[(0,a.Lk)("button",{onClick:n[2]||(n[2]=function(){return r.writeImmediate&&r.writeImmediate.apply(r,arguments)}),disabled:""===r.data||""===r.address,type:"button",class:"btn btn-success btn-lg me-1"},"Write ",8,f)])])}e(115),e(3270),e(959),e(5086);var b=".";function h(r,n){var e={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)};return fetch("".concat(b,"/publish/").concat(r),e).then((function(r){return r.json()})).then((function(r){return console.log(r)}))["catch"]((function(r){return console.error("There was an error!",r)}))}const v=(0,a.pM)({name:"SingleAddress",data:function(){return{data:"",address:""}},methods:{writeImmediate:function(){""!==this.address&&""!==this.data&&h("command",{command:"WRITE",address:this.address,data:this.data})}}});var w=e(1241);const y=(0,w.A)(v,[["render",g]]),x=y;var k={class:"row mb-5"},L={class:"col-12 col-lg-6 mb-3 overflow-hidden"},_=(0,a.Lk)("label",{class:"form-label"},"Write your program",-1),$={class:"col-12 col-lg-4 mb-3 overflow-hidden"},j={class:"mb-3"},A=(0,a.Lk)("label",{for:"program-txt",class:"form-label"},"Compiled program",-1),C={key:0},P={key:1},V={class:"btn-group d-flex justify-content-end",role:"group","aria-label":"button group"},O=["disabled"];function B(r,n,e,t,i,o){var l=(0,a.g2)("prism-editor");return(0,a.uX)(),(0,a.CE)("div",k,[(0,a.Lk)("div",L,[_,(0,a.bF)(l,{class:"editor source",modelValue:r.source,"onUpdate:modelValue":n[0]||(n[0]=function(n){return r.source=n}),highlight:r.sourceHighlighter,"line-numbers":!0},null,8,["modelValue","highlight"])]),(0,a.Lk)("div",$,[(0,a.Lk)("div",j,[A,r.error?((0,a.uX)(),(0,a.CE)("div",C,[(0,a.bF)(l,{class:"editor error",modelValue:r.error,"onUpdate:modelValue":n[1]||(n[1]=function(n){return r.error=n}),highlight:function(r){return r},readonly:!0},null,8,["modelValue","highlight"])])):((0,a.uX)(),(0,a.CE)("div",P,[(0,a.bF)(l,{class:"editor compiled",modelValue:r.compiled,"onUpdate:modelValue":n[2]||(n[2]=function(n){return r.compiled=n}),highlight:r.compiledHighlighter,readonly:!0},null,8,["modelValue","highlight"])]))]),(0,a.Lk)("div",V,[(0,a.Lk)("button",{onClick:n[3]||(n[3]=function(){return r.uploadProgram&&r.uploadProgram.apply(r,arguments)}),disabled:""!==r.error,type:"button",class:"btn btn-lg btn-primary"}," Upload ",8,O),(0,a.Lk)("button",{onClick:n[4]||(n[4]=function(){return r.writeProgram&&r.writeProgram.apply(r,arguments)}),type:"button",class:"btn btn-lg btn-success"}," Write to RAM ")])])])}var M=e(8676),I=(e(4117),e(8476),e(475),e(9581),e(9389),e(2231),e(7136),e(6048),e(173),e(3725),e(9838),e(1339),e(8379),e(1716)),E=e(1718);e(8772);function F(r,n){var e;return function(){for(var t=arguments.length,a=new Array(t),i=0;i<t;i++)a[i]=arguments[i];e&&clearTimeout(e),e=setTimeout((function(){return r.call.apply(r,[null].concat(a))}),n)}}var N=e(6905);const S=(0,a.pM)({name:"ProgramCompiler",components:{PrismEditor:I.N},data:function(){var r=this;return{parser:E.generate(N),source:"",compiled:"",error:" ",debouncedCompiler:function(n){return F((function(){return r.compile(n)}),500)}}},mounted:function(){this.source="      ldi 4\nx:j:  add data\n      out\n      jmp j\ndata: 0x02\n"},watch:{source:function(r){this.debouncedCompiler(r)}},methods:{compile:function(r){var n;try{n=this.parser.parse(r,{compile:!0})}catch(e){return void(this.error=e.message)}this.error="",this.compiled=n},sourceHighlighter:function(r){try{return this.parser.parse(r,{highlight:!0})}catch(n){return r}},compiledHighlighter:function(r){return r.split("\n").map((function(r){return r.replace(/(\d{4}):(\d{4})(\d{4})/,"<addr>$1</addr>:<instr>$2</instr><opcode>$3</opcode>")})).join("\n")},uploadProgram:function(){if(!this.error){var r={};this.compiled.split("\n").forEach((function(n){var e=n.split(":"),t=(0,M.A)(e,2),a=t[0],i=t[1];r[parseInt(a,2).toString()]=parseInt(i,2)})),h("program",r)}},writeProgram:function(){h("command",{command:"PROGRAM"})}}}),T=(0,w.A)(S,[["render",B]]),U=T,W=(0,a.pM)({name:"Breadboard PC programmer",components:{ProgramCompiler:U,SingleAddress:x}}),R=(0,w.A)(W,[["render",l]]),X=R;var H=(0,t.Ef)(X);H.mount("#app")},6905:r=>{r.exports='{{ \r\n  function toBinary(number, length) {\r\n    return number.toString(2).padStart(length, "0");\r\n  }\r\n\r\n  function tag(tag, value) {\r\n  \treturn `<token-${tag}>${value}</token-${tag}>`;\r\n  }\r\n\r\n  function tagWithAttribute(tag, value, attributeName, attributeValue) {\r\n  \treturn `<token-${tag} ${attributeName}="${attributeValue}">${value}</token-${tag}>`;\r\n  }\r\n\r\n  function _checkBinaryLength(value, radix, length) {\r\n    return toBinary(parseInt(value, radix), length).length === length;\r\n  }\r\n\r\n  function _parseBinary(prefix, digits, radix, length) {\r\n \tconst str = digits.join("");\r\n    const raw = prefix + str;\r\n    const parsed = parseInt(str, radix); \r\n\r\n    return {\r\n      f: () => toBinary(parsed, length), \r\n      h: () => tag("immediate", raw),\r\n      raw\r\n    };\r\n  }\r\n}}\r\n\r\n{\r\n  const labelMap = {};\r\n  let numLines = 0;\r\n\r\n  function addLine() {\r\n  \tnumLines++;\r\n  }\r\n\r\n  function addLabel(lbl) {\r\n  \tlabelMap[lbl] = {\r\n      label: lbl, \r\n      location: numLines\r\n    };\r\n  }\r\n\r\n  function isLabelDefined(lbl) {\r\n    return labelMap[lbl] !== undefined;\r\n  }\r\n\r\n  function getLabel(lbl) {\r\n    if (!isLabelDefined(lbl)) {\r\n      error(`Use of undefined label: "${lbl}"`);\r\n    }\r\n\r\n    return labelMap[lbl];\r\n  }\r\n\r\n  function parseNibble(prefix, digits, radix) {\r\n    return _parseInteger(prefix, digits, radix, 4);\r\n  }\r\n\r\n  function parseByte(prefix, digits, radix) {\r\n    return _parseInteger(prefix, digits, radix, 8);\r\n  }\r\n\r\n  function _parseInteger(prefix, digits, radix, length) {\r\n    const result = _parseBinary(prefix, digits, radix, length);\r\n\r\n    if (result.f().length > length) {\r\n      error(`Value ${result.raw} (0b${result.f()}) too large for memory!`);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  function compile(lines) {\r\n    if (options.compile) {\r\n      console.info("labels", labelMap);\r\n      console.info("lines", lines);\r\n\r\n      return lines\r\n        .map((line, index) => `${toBinary(index, 4)}:${line.f()}`)\r\n        .join("\\n");\r\n    }\r\n\r\n    if (options.highlight) {\r\n      return lines\r\n        .map((line) => line.h())\r\n        .join("");\r\n    }\r\n\r\n    error("Option \'compile\' or \'highlight\' must be passed to parse function");\r\n  }\r\n}\r\n\r\nprogram\r\n  = lines:line* { return compile(lines) } \r\n\r\nline\r\n  = lbls:(lbl:label":" ws:__ { addLabel(lbl.f()); return {h: () => tag("label-definition", `${lbl.h()}:`) + ws} } )* \r\n  ws1:__ cmd:command ws2:__ \r\n    { addLine(); return {f: cmd.f, h: () => `${lbls.map((lbl) => lbl.h()).join("")}${ws1}${cmd.h()}${ws2}`} }\r\n\r\ncommand\r\n  = i:instruction \r\n    { return {f: i.f, h: () => tag("instr", i.h())} }\r\n  / b:byte \r\n    { return {f: b.f, h: () => tag("instr-pseudo", b.h())} }\r\n\r\ninstruction\r\n  = mne:"lda" ws:_ a:address   { return {f: () => "0001" + a.f(), h: () => tag("mnemonic", mne)+ws+a.h()} }\r\n  / mne:"add" ws:_ a:address   { return {f: () => "0010" + a.f(), h: () => tag("mnemonic", mne)+ws+a.h()} }\r\n  / mne:"sub" ws:_ a:address   { return {f: () => "0011" + a.f(), h: () => tag("mnemonic", mne)+ws+a.h()} }\r\n  / mne:"sta" ws:_ a:address   { return {f: () => "0100" + a.f(), h: () => tag("mnemonic", mne)+ws+a.h()} }\r\n  / mne:"ldi" ws:_ i:immediate { return {f: () => "0101" + i.f(), h: () => tag("mnemonic", mne)+ws+i.h()} }\r\n  / mne:"jmp" ws:_ a:address   { return {f: () => "0110" + a.f(), h: () => tag("mnemonic", mne)+ws+a.h()} }\r\n  / mne:"jc"  ws:_ a:address   { return {f: () => "0111" + a.f(), h: () => tag("mnemonic", mne)+ws+a.h()} }\r\n  / mne:"jz"  ws:_ a:address   { return {f: () => "1000" + a.f(), h: () => tag("mnemonic", mne)+ws+a.h()} }\r\n  / mne:"nop"                  { return {f: () => "00000000",     h: () => tag("mnemonic", mne)} }\r\n  / mne:"out"                  { return {f: () => "11100000",     h: () => tag("mnemonic", mne)} }\r\n  / mne:"hlt"                  { return {f: () => "11110000",     h: () => tag("mnemonic", mne)} }\r\n\r\naddress\r\n  = imm:immediate \r\n    { return {f: imm.f, h: () => tag("jump-target", imm.h()) } }\r\n  / lbl:label \r\n    { return {f: () => toBinary(getLabel(lbl.f()).location, 4), h: () => tag("jump-target", lbl.h())} }\r\n\r\nimmediate "4 bit word"\r\n  = prefix:"0x" digits:[0-9A-Fa-f]+\r\n    { return parseNibble(prefix, digits, 16) }\r\n  / prefix:"0b" digits:[0-1]+\r\n    { return parseNibble(prefix, digits, 2) }\r\n  / digits:[0-9]+\r\n    { return parseNibble("", digits, 10) }\r\n\r\nlabel "label"\r\n  = [a-zA-Z]+[a-zA-Z0-9]* \r\n    { const lbl = text(); return {f: () => lbl, h: () => tagWithAttribute("label", lbl, "defined", isLabelDefined(lbl))} }\r\n\r\nbyte "8 bit word"\r\n  = prefix:"0x" digits:[0-9A-Fa-f]+\r\n    { return parseByte(prefix, digits, 16) }\r\n  / prefix:"0b" digits:[0-1]+\r\n    { return parseByte(prefix, digits, 2) }\r\n  / digits:[0-9]+\r\n    { return parseByte("", digits, 10) }\r\n\r\n_ "whitespace"\r\n  = $ [ \\t]*\r\n\r\n__ "whitespace and newline"\r\n  = $ [ \\n\\t\\r]*\r\n'}},n={};function e(t){var a=n[t];if(void 0!==a)return a.exports;var i=n[t]={exports:{}};return r[t](i,i.exports,e),i.exports}e.m=r,(()=>{var r=[];e.O=(n,t,a,i)=>{if(!t){var o=1/0;for(u=0;u<r.length;u++){for(var[t,a,i]=r[u],l=!0,s=0;s<t.length;s++)(!1&i||o>=i)&&Object.keys(e.O).every((r=>e.O[r](t[s])))?t.splice(s--,1):(l=!1,i<o&&(o=i));if(l){r.splice(u--,1);var d=a();void 0!==d&&(n=d)}}return n}i=i||0;for(var u=r.length;u>0&&r[u-1][2]>i;u--)r[u]=r[u-1];r[u]=[t,a,i]}})(),(()=>{e.n=r=>{var n=r&&r.__esModule?()=>r["default"]:()=>r;return e.d(n,{a:n}),n}})(),(()=>{e.d=(r,n)=>{for(var t in n)e.o(n,t)&&!e.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:n[t]})}})(),(()=>{e.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(r){if("object"===typeof window)return window}}()})(),(()=>{e.o=(r,n)=>Object.prototype.hasOwnProperty.call(r,n)})(),(()=>{var r={524:0};e.O.j=n=>0===r[n];var n=(n,t)=>{var a,i,[o,l,s]=t,d=0;if(o.some((n=>0!==r[n]))){for(a in l)e.o(l,a)&&(e.m[a]=l[a]);if(s)var u=s(e)}for(n&&n(t);d<o.length;d++)i=o[d],e.o(r,i)&&r[i]&&r[i][0](),r[i]=0;return e.O(u)},t=self["webpackChunkbreadboard_pc_programmer_app"]=self["webpackChunkbreadboard_pc_programmer_app"]||[];t.forEach(n.bind(null,0)),t.push=n.bind(null,t.push.bind(t))})();var t=e.O(void 0,[504],(()=>e(6818)));t=e.O(t)})();
//# sourceMappingURL=app.7e36b4ba.js.map